version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: kong
  KONG_PG_HOST: postgresd
  KONG_PG_USER: user
  KONG_PG_PASSWORD: secret

services:
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    environment:
      <<: *kong-env
    networks:
      - intranet 
    restart: on-failure

  kong-migrations-up:
    image: kong:latest
    command: kong migrations up && kong migrations finish
    environment:
      <<: *kong-env
    networks:
      - intranet
    restart: on-failure

  kong:
    image: kong:latest
    user: kong
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: /var/run/kong
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    networks:
      - intranet
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"
      - "8444:8444"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

  konga:
    image: pantsel/konga
    environment:
      TOKEN_SECRET: secret 
      DB_ADAPTER: postgres 
      DB_HOST: postgresd
      DB_PORT: 5432
      DB_DATABASE: konga
      DB_USER: user
      DB_PASSWORD: secret 
      NODE_ENV: development
      KONGA_HOOK_TIMEOUT: 10000
    restart: on-failure
    ports:
      - 1337:1337
    networks:
      - intranet 


volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

networks:
  intranet:
    external: true
